{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1_hkxEZox22eBm-6FVei4G-qCLjYwslov","authorship_tag":"ABX9TyPFQmBcl6HlVXtqn//nKF8I"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"D-5czZFD_qdh"},"outputs":[],"source":["import pandas as pd\n","import numpy as np"]},{"cell_type":"code","source":["df=pd.read_csv(\"/content/drive/MyDrive/Project_II/New dataset_2/Road in India.csv\")\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":565},"id":"5CIbR_nYF3jZ","executionInfo":{"status":"ok","timestamp":1708679155627,"user_tz":-330,"elapsed":1109,"user":{"displayName":"Project","userId":"04591569167876890835"}},"outputId":"8f030d3b-27ae-4ffe-83e7-b076cac58802"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Time Day_of_week Age_band_of_driver Sex_of_driver  \\\n","0      17:02:00      Monday              18-30          Male   \n","1      17:02:00      Monday              31-50          Male   \n","2      17:02:00      Monday              18-30          Male   \n","3      01:06:00      Sunday              18-30          Male   \n","4      01:06:00      Sunday              18-30          Male   \n","...         ...         ...                ...           ...   \n","12311  16:15:00   Wednesday              31-50          Male   \n","12312  18:00:00      Sunday            Unknown          Male   \n","12313  13:55:00      Sunday            Over 51          Male   \n","12314  13:55:00      Sunday              18-30        Female   \n","12315  13:55:00      Sunday              18-30          Male   \n","\n","        Educational_level Vehicle_driver_relation Driving_experience  \\\n","0       Above high school                Employee              1-2yr   \n","1      Junior high school                Employee         Above 10yr   \n","2      Junior high school                Employee              1-2yr   \n","3      Junior high school                Employee             5-10yr   \n","4      Junior high school                Employee              2-5yr   \n","...                   ...                     ...                ...   \n","12311                 NaN                Employee              2-5yr   \n","12312   Elementary school                Employee             5-10yr   \n","12313  Junior high school                Employee             5-10yr   \n","12314  Junior high school                Employee         Above 10yr   \n","12315  Junior high school                Employee             5-10yr   \n","\n","           Type_of_vehicle Owner_of_vehicle Service_year_of_vehicle  ...  \\\n","0               Automobile            Owner              Above 10yr  ...   \n","1      Public (> 45 seats)            Owner                 5-10yrs  ...   \n","2          Lorry (41?100Q)            Owner                     NaN  ...   \n","3      Public (> 45 seats)     Governmental                     NaN  ...   \n","4                      NaN            Owner                 5-10yrs  ...   \n","...                    ...              ...                     ...  ...   \n","12311       Lorry (11?40Q)            Owner                     NaN  ...   \n","12312           Automobile            Owner                     NaN  ...   \n","12313                Bajaj            Owner                  2-5yrs  ...   \n","12314      Lorry (41?100Q)            Owner                  2-5yrs  ...   \n","12315                Other            Owner                  2-5yrs  ...   \n","\n","      Vehicle_movement   Casualty_class Sex_of_casualty Age_band_of_casualty  \\\n","0       Going straight               na              na                   na   \n","1       Going straight               na              na                   na   \n","2       Going straight  Driver or rider            Male                31-50   \n","3       Going straight       Pedestrian          Female                18-30   \n","4       Going straight               na              na                   na   \n","...                ...              ...             ...                  ...   \n","12311   Going straight               na              na                   na   \n","12312            Other               na              na                   na   \n","12313            Other  Driver or rider            Male                31-50   \n","12314            Other               na              na                   na   \n","12315         Stopping       Pedestrian          Female                    5   \n","\n","      Casualty_severity Work_of_casuality Fitness_of_casuality  \\\n","0                    na               NaN                  NaN   \n","1                    na               NaN                  NaN   \n","2                     3            Driver                  NaN   \n","3                     3            Driver               Normal   \n","4                    na               NaN                  NaN   \n","...                 ...               ...                  ...   \n","12311                na            Driver               Normal   \n","12312                na            Driver               Normal   \n","12313                 3            Driver               Normal   \n","12314                na            Driver               Normal   \n","12315                 3            Driver               Normal   \n","\n","                                     Pedestrian_movement  \\\n","0                                       Not a Pedestrian   \n","1                                       Not a Pedestrian   \n","2                                       Not a Pedestrian   \n","3                                       Not a Pedestrian   \n","4                                       Not a Pedestrian   \n","...                                                  ...   \n","12311                                   Not a Pedestrian   \n","12312                                   Not a Pedestrian   \n","12313                                   Not a Pedestrian   \n","12314                                   Not a Pedestrian   \n","12315  Crossing from nearside - masked by parked or s...   \n","\n","                          Cause_of_accident Accident_severity  \n","0                           Moving Backward     Slight Injury  \n","1                                Overtaking     Slight Injury  \n","2                 Changing lane to the left    Serious Injury  \n","3                Changing lane to the right     Slight Injury  \n","4                                Overtaking     Slight Injury  \n","...                                     ...               ...  \n","12311                         No distancing     Slight Injury  \n","12312                         No distancing     Slight Injury  \n","12313            Changing lane to the right    Serious Injury  \n","12314  Driving under the influence of drugs     Slight Injury  \n","12315            Changing lane to the right     Slight Injury  \n","\n","[12316 rows x 32 columns]"],"text/html":["\n","  <div id=\"df-f328ee70-f61c-4dd3-902c-635e3e694cbf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>Day_of_week</th>\n","      <th>Age_band_of_driver</th>\n","      <th>Sex_of_driver</th>\n","      <th>Educational_level</th>\n","      <th>Vehicle_driver_relation</th>\n","      <th>Driving_experience</th>\n","      <th>Type_of_vehicle</th>\n","      <th>Owner_of_vehicle</th>\n","      <th>Service_year_of_vehicle</th>\n","      <th>...</th>\n","      <th>Vehicle_movement</th>\n","      <th>Casualty_class</th>\n","      <th>Sex_of_casualty</th>\n","      <th>Age_band_of_casualty</th>\n","      <th>Casualty_severity</th>\n","      <th>Work_of_casuality</th>\n","      <th>Fitness_of_casuality</th>\n","      <th>Pedestrian_movement</th>\n","      <th>Cause_of_accident</th>\n","      <th>Accident_severity</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17:02:00</td>\n","      <td>Monday</td>\n","      <td>18-30</td>\n","      <td>Male</td>\n","      <td>Above high school</td>\n","      <td>Employee</td>\n","      <td>1-2yr</td>\n","      <td>Automobile</td>\n","      <td>Owner</td>\n","      <td>Above 10yr</td>\n","      <td>...</td>\n","      <td>Going straight</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Moving Backward</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>17:02:00</td>\n","      <td>Monday</td>\n","      <td>31-50</td>\n","      <td>Male</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>Above 10yr</td>\n","      <td>Public (&gt; 45 seats)</td>\n","      <td>Owner</td>\n","      <td>5-10yrs</td>\n","      <td>...</td>\n","      <td>Going straight</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Overtaking</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>17:02:00</td>\n","      <td>Monday</td>\n","      <td>18-30</td>\n","      <td>Male</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>1-2yr</td>\n","      <td>Lorry (41?100Q)</td>\n","      <td>Owner</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>Going straight</td>\n","      <td>Driver or rider</td>\n","      <td>Male</td>\n","      <td>31-50</td>\n","      <td>3</td>\n","      <td>Driver</td>\n","      <td>NaN</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Changing lane to the left</td>\n","      <td>Serious Injury</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01:06:00</td>\n","      <td>Sunday</td>\n","      <td>18-30</td>\n","      <td>Male</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>5-10yr</td>\n","      <td>Public (&gt; 45 seats)</td>\n","      <td>Governmental</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>Going straight</td>\n","      <td>Pedestrian</td>\n","      <td>Female</td>\n","      <td>18-30</td>\n","      <td>3</td>\n","      <td>Driver</td>\n","      <td>Normal</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Changing lane to the right</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01:06:00</td>\n","      <td>Sunday</td>\n","      <td>18-30</td>\n","      <td>Male</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>2-5yr</td>\n","      <td>NaN</td>\n","      <td>Owner</td>\n","      <td>5-10yrs</td>\n","      <td>...</td>\n","      <td>Going straight</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Overtaking</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>12311</th>\n","      <td>16:15:00</td>\n","      <td>Wednesday</td>\n","      <td>31-50</td>\n","      <td>Male</td>\n","      <td>NaN</td>\n","      <td>Employee</td>\n","      <td>2-5yr</td>\n","      <td>Lorry (11?40Q)</td>\n","      <td>Owner</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>Going straight</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>Driver</td>\n","      <td>Normal</td>\n","      <td>Not a Pedestrian</td>\n","      <td>No distancing</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>12312</th>\n","      <td>18:00:00</td>\n","      <td>Sunday</td>\n","      <td>Unknown</td>\n","      <td>Male</td>\n","      <td>Elementary school</td>\n","      <td>Employee</td>\n","      <td>5-10yr</td>\n","      <td>Automobile</td>\n","      <td>Owner</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>Other</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>Driver</td>\n","      <td>Normal</td>\n","      <td>Not a Pedestrian</td>\n","      <td>No distancing</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>12313</th>\n","      <td>13:55:00</td>\n","      <td>Sunday</td>\n","      <td>Over 51</td>\n","      <td>Male</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>5-10yr</td>\n","      <td>Bajaj</td>\n","      <td>Owner</td>\n","      <td>2-5yrs</td>\n","      <td>...</td>\n","      <td>Other</td>\n","      <td>Driver or rider</td>\n","      <td>Male</td>\n","      <td>31-50</td>\n","      <td>3</td>\n","      <td>Driver</td>\n","      <td>Normal</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Changing lane to the right</td>\n","      <td>Serious Injury</td>\n","    </tr>\n","    <tr>\n","      <th>12314</th>\n","      <td>13:55:00</td>\n","      <td>Sunday</td>\n","      <td>18-30</td>\n","      <td>Female</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>Above 10yr</td>\n","      <td>Lorry (41?100Q)</td>\n","      <td>Owner</td>\n","      <td>2-5yrs</td>\n","      <td>...</td>\n","      <td>Other</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>Driver</td>\n","      <td>Normal</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Driving under the influence of drugs</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>12315</th>\n","      <td>13:55:00</td>\n","      <td>Sunday</td>\n","      <td>18-30</td>\n","      <td>Male</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>5-10yr</td>\n","      <td>Other</td>\n","      <td>Owner</td>\n","      <td>2-5yrs</td>\n","      <td>...</td>\n","      <td>Stopping</td>\n","      <td>Pedestrian</td>\n","      <td>Female</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>Driver</td>\n","      <td>Normal</td>\n","      <td>Crossing from nearside - masked by parked or s...</td>\n","      <td>Changing lane to the right</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>12316 rows × 32 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f328ee70-f61c-4dd3-902c-635e3e694cbf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f328ee70-f61c-4dd3-902c-635e3e694cbf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f328ee70-f61c-4dd3-902c-635e3e694cbf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-aaa7d84d-a029-481c-b79a-ad0c59b30f47\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aaa7d84d-a029-481c-b79a-ad0c59b30f47')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-aaa7d84d-a029-481c-b79a-ad0c59b30f47 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_269de7f7-3c5a-4eaa-af83-8def9a9951cf\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_269de7f7-3c5a-4eaa-af83-8def9a9951cf button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DQKawFWnGLVL","executionInfo":{"status":"ok","timestamp":1708679157457,"user_tz":-330,"elapsed":14,"user":{"displayName":"Project","userId":"04591569167876890835"}},"outputId":"7dc57541-f12e-4c2c-f9c7-e2d33d8d1486"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Time', 'Day_of_week', 'Age_band_of_driver', 'Sex_of_driver',\n","       'Educational_level', 'Vehicle_driver_relation', 'Driving_experience',\n","       'Type_of_vehicle', 'Owner_of_vehicle', 'Service_year_of_vehicle',\n","       'Defect_of_vehicle', 'Area_accident_occured', 'Lanes_or_Medians',\n","       'Road_allignment', 'Types_of_Junction', 'Road_surface_type',\n","       'Road_surface_conditions', 'Light_conditions', 'Weather_conditions',\n","       'Type_of_collision', 'Number_of_vehicles_involved',\n","       'Number_of_casualties', 'Vehicle_movement', 'Casualty_class',\n","       'Sex_of_casualty', 'Age_band_of_casualty', 'Casualty_severity',\n","       'Work_of_casuality', 'Fitness_of_casuality', 'Pedestrian_movement',\n","       'Cause_of_accident', 'Accident_severity'],\n","      dtype='object')"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["from sklearn import preprocessing\n","le = preprocessing.LabelEncoder()\n","df[ 'Time' ]= le.fit_transform(df[ 'Time' ])\n","df[ 'Day_of_week' ]= le.fit_transform(df[ 'Day_of_week' ])\n","df[ 'Age_band_of_driver' ]= le.fit_transform(df[ 'Age_band_of_driver' ])\n","df[ 'Sex_of_driver' ]= le.fit_transform(df[ 'Sex_of_driver' ])\n","df[ 'Educational_level' ]= le.fit_transform(df[ 'Educational_level' ])\n","df[ 'Vehicle_driver_relation' ]= le.fit_transform(df[ 'Vehicle_driver_relation' ])\n","df[ 'Driving_experience' ]= le.fit_transform(df[ 'Driving_experience' ])\n","df[ 'Type_of_vehicle' ]= le.fit_transform(df[ 'Type_of_vehicle' ])\n","df[ 'Owner_of_vehicle' ]= le.fit_transform(df[ 'Owner_of_vehicle' ])\n","df[ 'Service_year_of_vehicle' ]= le.fit_transform(df[ 'Service_year_of_vehicle' ])\n","df[ 'Defect_of_vehicle' ]= le.fit_transform(df[ 'Defect_of_vehicle' ])\n","df[ 'Area_accident_occured' ]= le.fit_transform(df[ 'Area_accident_occured' ])\n","df[ 'Lanes_or_Medians' ]= le.fit_transform(df[ 'Lanes_or_Medians' ])\n","df[ 'Road_allignment' ]= le.fit_transform(df[ 'Road_allignment' ])\n","df[ 'Types_of_Junction' ]= le.fit_transform(df[ 'Types_of_Junction' ])\n","df[ 'Road_surface_type' ]= le.fit_transform(df[ 'Road_surface_type' ])\n","df[ 'Road_surface_conditions' ]= le.fit_transform(df[ 'Road_surface_conditions' ])\n","df[ 'Light_conditions' ]= le.fit_transform(df[ 'Light_conditions' ])\n","df[ 'Weather_conditions' ]= le.fit_transform(df[ 'Weather_conditions' ])\n","df[ 'Type_of_collision' ]= le.fit_transform(df[ 'Type_of_collision' ])\n","df[ 'Number_of_vehicles_involved' ]= le.fit_transform(df[ 'Number_of_vehicles_involved' ])\n","df[ 'Number_of_casualties' ]= le.fit_transform(df[ 'Number_of_casualties' ])\n","df[ 'Vehicle_movement' ]= le.fit_transform(df[ 'Vehicle_movement' ])\n","df[ 'Casualty_class' ]= le.fit_transform(df[ 'Casualty_class' ])\n","df[ 'Sex_of_casualty' ]= le.fit_transform(df[ 'Sex_of_casualty' ])\n","df[ 'Age_band_of_casualty' ]= le.fit_transform(df[ 'Age_band_of_casualty' ])\n","df[ 'Casualty_severity' ]= le.fit_transform(df[ 'Casualty_severity' ])\n","df[ 'Work_of_casuality' ]= le.fit_transform(df[ 'Work_of_casuality' ])\n","df[ 'Fitness_of_casuality' ]= le.fit_transform(df[ 'Fitness_of_casuality' ])\n","df[ 'Pedestrian_movement' ]= le.fit_transform(df[ 'Pedestrian_movement' ])\n","df[ 'Cause_of_accident' ]= le.fit_transform(df[ 'Cause_of_accident' ])\n","df[ 'Accident_severity' ]= le.fit_transform(df[ 'Accident_severity' ])\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"Tu5T4GzjGMo_","executionInfo":{"status":"ok","timestamp":1708679161958,"user_tz":-330,"elapsed":782,"user":{"displayName":"Project","userId":"04591569167876890835"}},"outputId":"b6c29f77-f47d-4772-8164-ed53a98d17e2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Time  Day_of_week  Age_band_of_driver  Sex_of_driver  \\\n","0       735            1                   0              1   \n","1       735            1                   1              1   \n","2       735            1                   0              1   \n","3        42            3                   0              1   \n","4        42            3                   0              1   \n","...     ...          ...                 ...            ...   \n","12311   689            6                   1              1   \n","12312   791            3                   4              1   \n","12313   561            3                   2              1   \n","12314   561            3                   0              0   \n","12315   561            3                   0              1   \n","\n","       Educational_level  Vehicle_driver_relation  Driving_experience  \\\n","0                      0                        0                   0   \n","1                      4                        0                   3   \n","2                      4                        0                   0   \n","3                      4                        0                   2   \n","4                      4                        0                   1   \n","...                  ...                      ...                 ...   \n","12311                  7                        0                   1   \n","12312                  1                        0                   2   \n","12313                  4                        0                   2   \n","12314                  4                        0                   3   \n","12315                  4                        0                   2   \n","\n","       Type_of_vehicle  Owner_of_vehicle  Service_year_of_vehicle  ...  \\\n","0                    0                 3                        3  ...   \n","1                   11                 3                        2  ...   \n","2                    5                 3                        6  ...   \n","3                   11                 0                        6  ...   \n","4                   17                 3                        2  ...   \n","...                ...               ...                      ...  ...   \n","12311                4                 3                        6  ...   \n","12312                0                 3                        6  ...   \n","12313                1                 3                        1  ...   \n","12314                5                 3                        1  ...   \n","12315                7                 3                        1  ...   \n","\n","       Vehicle_movement  Casualty_class  Sex_of_casualty  \\\n","0                     2               3                2   \n","1                     2               3                2   \n","2                     2               0                1   \n","3                     2               2                0   \n","4                     2               3                2   \n","...                 ...             ...              ...   \n","12311                 2               3                2   \n","12312                 4               3                2   \n","12313                 4               0                1   \n","12314                 4               3                2   \n","12315                 8               2                0   \n","\n","       Age_band_of_casualty  Casualty_severity  Work_of_casuality  \\\n","0                         5                  3                  7   \n","1                         5                  3                  7   \n","2                         1                  2                  0   \n","3                         0                  2                  0   \n","4                         5                  3                  7   \n","...                     ...                ...                ...   \n","12311                     5                  3                  0   \n","12312                     5                  3                  0   \n","12313                     1                  2                  0   \n","12314                     5                  3                  0   \n","12315                     2                  2                  0   \n","\n","       Fitness_of_casuality  Pedestrian_movement  Cause_of_accident  \\\n","0                         5                    5                  9   \n","1                         5                    5                 16   \n","2                         5                    5                  0   \n","3                         2                    5                  1   \n","4                         5                    5                 16   \n","...                     ...                  ...                ...   \n","12311                     2                    5                 10   \n","12312                     2                    5                 10   \n","12313                     2                    5                  1   \n","12314                     2                    5                  5   \n","12315                     2                    1                  1   \n","\n","       Accident_severity  \n","0                      2  \n","1                      2  \n","2                      1  \n","3                      2  \n","4                      2  \n","...                  ...  \n","12311                  2  \n","12312                  2  \n","12313                  1  \n","12314                  2  \n","12315                  2  \n","\n","[12316 rows x 32 columns]"],"text/html":["\n","  <div id=\"df-0c62bdfe-d29b-4f3d-a46e-7cd1c71c3177\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>Day_of_week</th>\n","      <th>Age_band_of_driver</th>\n","      <th>Sex_of_driver</th>\n","      <th>Educational_level</th>\n","      <th>Vehicle_driver_relation</th>\n","      <th>Driving_experience</th>\n","      <th>Type_of_vehicle</th>\n","      <th>Owner_of_vehicle</th>\n","      <th>Service_year_of_vehicle</th>\n","      <th>...</th>\n","      <th>Vehicle_movement</th>\n","      <th>Casualty_class</th>\n","      <th>Sex_of_casualty</th>\n","      <th>Age_band_of_casualty</th>\n","      <th>Casualty_severity</th>\n","      <th>Work_of_casuality</th>\n","      <th>Fitness_of_casuality</th>\n","      <th>Pedestrian_movement</th>\n","      <th>Cause_of_accident</th>\n","      <th>Accident_severity</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>735</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>735</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>16</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>735</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>42</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>42</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>16</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>12311</th>\n","      <td>689</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>12312</th>\n","      <td>791</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>12313</th>\n","      <td>561</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>12314</th>\n","      <td>561</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>12315</th>\n","      <td>561</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>12316 rows × 32 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c62bdfe-d29b-4f3d-a46e-7cd1c71c3177')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c62bdfe-d29b-4f3d-a46e-7cd1c71c3177 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c62bdfe-d29b-4f3d-a46e-7cd1c71c3177');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9576c0fe-cf3f-4870-961e-7bbdd5d1a32a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9576c0fe-cf3f-4870-961e-7bbdd5d1a32a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9576c0fe-cf3f-4870-961e-7bbdd5d1a32a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c265d48c-5e4d-4026-9f51-a055bf0d5890\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c265d48c-5e4d-4026-9f51-a055bf0d5890 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.metrics import accuracy_score\n","from keras.layers import Input, Dense, BatchNormalization, Activation, Add\n","from keras.models import Model\n","# Assuming your target variable is named 'target'\n","X = df.drop('Accident_severity', axis=1)  # Features\n","y = df['Accident_severity']  # Target variable\n","# Encode the string labels if needed\n","label_encoder = LabelEncoder()\n","y = label_encoder.fit_transform(y)\n","# Split the dataset into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","def residual_block(input_tensor, units, activation='relu'):\n","    x = Dense(units)(input_tensor)\n","    x = BatchNormalization()(x)\n","    x = Activation(activation)(x)\n","    x = Dense(units)(x)\n","    x = BatchNormalization()(x)# Ensure that shapes of input_tensor and x are compatible # If not, you may need to adjust the shape of input_tensor# or add extra layers to make them compatible\n","    shortcut = input_tensor\n","    if shortcut.shape[-1] != x.shape[-1]:\n","        shortcut = Dense(units)(shortcut)\n","    # Shortcut connection\n","    x = Add()([x, shortcut])\n","    x = Activation(activation)(x)\n","    return x\n","\n","def ResNet(input_shape, num_classes):\n","    inputs = Input(shape=input_shape)\n","    x = Dense(64)(inputs)\n","    x = BatchNormalization()(x)\n","    x = Activation('relu')(x)\n","    x = residual_block(x, units=64)\n","    x = residual_block(x, units=64)\n","    x = residual_block(x, units=128)\n","    x = residual_block(x, units=128)\n","    x = Dense(num_classes, activation='softmax')(x)\n","    model = Model(inputs, x)\n","    return model\n","input_shape = (X_train.shape[1],)  # Example shape, adjust according to your data\n","num_classes = len(np.unique(y_train))  # Number of unique classes\n","# Build and compile the model\n","model = ResNet(input_shape, num_classes)\n","model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n","# Train the model\n","model.fit(X_train, y_train, epochs=50, batch_size=32, validation_data=(X_test, y_test))\n","# Evaluate the model on test data\n","accuracy = model.evaluate(X_test, y_test)[1]\n","print(f\"Accuracy: {accuracy:.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gkGzf4WtAH1V","executionInfo":{"status":"ok","timestamp":1708679348070,"user_tz":-330,"elapsed":151171,"user":{"displayName":"Project","userId":"04591569167876890835"}},"outputId":"dd9003b3-110d-4b69-ae14-d4b6ae8f9949"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","308/308 [==============================] - 7s 6ms/step - loss: 0.5438 - accuracy: 0.8314 - val_loss: 0.5258 - val_accuracy: 0.8377\n","Epoch 2/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4975 - accuracy: 0.8454 - val_loss: 0.5043 - val_accuracy: 0.8377\n","Epoch 3/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4848 - accuracy: 0.8474 - val_loss: 0.5241 - val_accuracy: 0.8377\n","Epoch 4/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4842 - accuracy: 0.8476 - val_loss: 0.5040 - val_accuracy: 0.8377\n","Epoch 5/50\n","308/308 [==============================] - 2s 7ms/step - loss: 0.4782 - accuracy: 0.8476 - val_loss: 0.5316 - val_accuracy: 0.8377\n","Epoch 6/50\n","308/308 [==============================] - 2s 8ms/step - loss: 0.4778 - accuracy: 0.8474 - val_loss: 0.4990 - val_accuracy: 0.8377\n","Epoch 7/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4770 - accuracy: 0.8471 - val_loss: 0.5108 - val_accuracy: 0.8226\n","Epoch 8/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4745 - accuracy: 0.8477 - val_loss: 0.4975 - val_accuracy: 0.8377\n","Epoch 9/50\n","308/308 [==============================] - 2s 6ms/step - loss: 0.4710 - accuracy: 0.8474 - val_loss: 0.4960 - val_accuracy: 0.8377\n","Epoch 10/50\n","308/308 [==============================] - 2s 6ms/step - loss: 0.4730 - accuracy: 0.8476 - val_loss: 0.4944 - val_accuracy: 0.8377\n","Epoch 11/50\n","308/308 [==============================] - 2s 6ms/step - loss: 0.4696 - accuracy: 0.8475 - val_loss: 0.5009 - val_accuracy: 0.8377\n","Epoch 12/50\n","308/308 [==============================] - 2s 6ms/step - loss: 0.4685 - accuracy: 0.8476 - val_loss: 0.4959 - val_accuracy: 0.8377\n","Epoch 13/50\n","308/308 [==============================] - 3s 8ms/step - loss: 0.4703 - accuracy: 0.8476 - val_loss: 0.5575 - val_accuracy: 0.8369\n","Epoch 14/50\n","308/308 [==============================] - 2s 6ms/step - loss: 0.4683 - accuracy: 0.8476 - val_loss: 0.4964 - val_accuracy: 0.8377\n","Epoch 15/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4664 - accuracy: 0.8474 - val_loss: 0.5235 - val_accuracy: 0.8377\n","Epoch 16/50\n","308/308 [==============================] - 2s 6ms/step - loss: 0.4654 - accuracy: 0.8473 - val_loss: 0.5128 - val_accuracy: 0.8377\n","Epoch 17/50\n","308/308 [==============================] - 2s 6ms/step - loss: 0.4655 - accuracy: 0.8476 - val_loss: 0.5162 - val_accuracy: 0.8129\n","Epoch 18/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4622 - accuracy: 0.8476 - val_loss: 0.5273 - val_accuracy: 0.8369\n","Epoch 19/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4598 - accuracy: 0.8475 - val_loss: 0.5059 - val_accuracy: 0.8377\n","Epoch 20/50\n","308/308 [==============================] - 2s 8ms/step - loss: 0.4606 - accuracy: 0.8475 - val_loss: 0.4895 - val_accuracy: 0.8377\n","Epoch 21/50\n","308/308 [==============================] - 2s 7ms/step - loss: 0.4585 - accuracy: 0.8474 - val_loss: 0.5069 - val_accuracy: 0.8377\n","Epoch 22/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4593 - accuracy: 0.8478 - val_loss: 0.4948 - val_accuracy: 0.8381\n","Epoch 23/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4580 - accuracy: 0.8479 - val_loss: 0.5003 - val_accuracy: 0.8373\n","Epoch 24/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4538 - accuracy: 0.8486 - val_loss: 0.5206 - val_accuracy: 0.8377\n","Epoch 25/50\n","308/308 [==============================] - 2s 6ms/step - loss: 0.4544 - accuracy: 0.8473 - val_loss: 0.4946 - val_accuracy: 0.8377\n","Epoch 26/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4529 - accuracy: 0.8479 - val_loss: 0.5198 - val_accuracy: 0.8316\n","Epoch 27/50\n","308/308 [==============================] - 2s 6ms/step - loss: 0.4524 - accuracy: 0.8477 - val_loss: 0.5108 - val_accuracy: 0.8389\n","Epoch 28/50\n","308/308 [==============================] - 2s 8ms/step - loss: 0.4493 - accuracy: 0.8486 - val_loss: 0.4865 - val_accuracy: 0.8377\n","Epoch 29/50\n","308/308 [==============================] - 2s 6ms/step - loss: 0.4455 - accuracy: 0.8482 - val_loss: 0.5100 - val_accuracy: 0.8373\n","Epoch 30/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4448 - accuracy: 0.8484 - val_loss: 0.5077 - val_accuracy: 0.8389\n","Epoch 31/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4427 - accuracy: 0.8478 - val_loss: 0.5214 - val_accuracy: 0.8360\n","Epoch 32/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4409 - accuracy: 0.8482 - val_loss: 0.4930 - val_accuracy: 0.8389\n","Epoch 33/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4417 - accuracy: 0.8474 - val_loss: 0.5349 - val_accuracy: 0.8385\n","Epoch 34/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4421 - accuracy: 0.8490 - val_loss: 0.4902 - val_accuracy: 0.8381\n","Epoch 35/50\n","308/308 [==============================] - 2s 6ms/step - loss: 0.4401 - accuracy: 0.8486 - val_loss: 0.5143 - val_accuracy: 0.8364\n","Epoch 36/50\n","308/308 [==============================] - 2s 8ms/step - loss: 0.4363 - accuracy: 0.8487 - val_loss: 0.4968 - val_accuracy: 0.8364\n","Epoch 37/50\n","308/308 [==============================] - 2s 6ms/step - loss: 0.4357 - accuracy: 0.8482 - val_loss: 0.5083 - val_accuracy: 0.8291\n","Epoch 38/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4326 - accuracy: 0.8486 - val_loss: 0.5033 - val_accuracy: 0.8356\n","Epoch 39/50\n","308/308 [==============================] - 1s 5ms/step - loss: 0.4330 - accuracy: 0.8484 - val_loss: 0.4979 - val_accuracy: 0.8377\n","Epoch 40/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4302 - accuracy: 0.8496 - val_loss: 0.4949 - val_accuracy: 0.8369\n","Epoch 41/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4275 - accuracy: 0.8503 - val_loss: 0.5158 - val_accuracy: 0.8324\n","Epoch 42/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4316 - accuracy: 0.8484 - val_loss: 0.5184 - val_accuracy: 0.8255\n","Epoch 43/50\n","308/308 [==============================] - 2s 7ms/step - loss: 0.4320 - accuracy: 0.8486 - val_loss: 0.4924 - val_accuracy: 0.8385\n","Epoch 44/50\n","308/308 [==============================] - 3s 8ms/step - loss: 0.4250 - accuracy: 0.8493 - val_loss: 0.5276 - val_accuracy: 0.8275\n","Epoch 45/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4253 - accuracy: 0.8493 - val_loss: 0.5013 - val_accuracy: 0.8385\n","Epoch 46/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4216 - accuracy: 0.8504 - val_loss: 0.5046 - val_accuracy: 0.8373\n","Epoch 47/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4202 - accuracy: 0.8511 - val_loss: 0.5057 - val_accuracy: 0.8389\n","Epoch 48/50\n","308/308 [==============================] - 2s 6ms/step - loss: 0.4175 - accuracy: 0.8509 - val_loss: 0.5278 - val_accuracy: 0.8214\n","Epoch 49/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4199 - accuracy: 0.8505 - val_loss: 0.5078 - val_accuracy: 0.8369\n","Epoch 50/50\n","308/308 [==============================] - 2s 5ms/step - loss: 0.4173 - accuracy: 0.8504 - val_loss: 0.5228 - val_accuracy: 0.8381\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5228 - accuracy: 0.8381\n","Accuracy: 0.8381\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix,precision_score, recall_score, f1_score\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","accuracy = model.evaluate(X_test, y_test)[1]\n","print(f\"Accuracy: {accuracy:.4f}\")\n","# Make predictions\n","y_pred = model.predict(X_test)\n","\n","# Convert predictions to class labels\n","y_pred_classes = np.argmax(y_pred, axis=1)\n","precision = precision_score(y_test, y_pred_classes, average='weighted')\n","recall = recall_score(y_test, y_pred_classes, average='weighted')\n","f1 = f1_score(y_test, y_pred_classes, average='weighted')\n","\n","print(f\"Precision: {precision:.4f}, Recall: {recall:.4f}, F-measure: {f1:.4f}\")\n","\n","y_pred = model.predict(X_test)\n","y_pred_labels = np.argmax(y_pred, axis=1)\n","cm = confusion_matrix(y_test, y_pred_labels)\n","# Create a DataFrame for better visualization\n","cm_df = pd.DataFrame(cm, index=label_encoder.classes_, columns=label_encoder.classes_)\n","plt.figure(figsize=(10, 8))\n","sns.heatmap(cm_df, annot=True, cmap='Blues', fmt='g')\n","plt.title('Confusion Matrix')\n","plt.xlabel('Predicted Label')\n","plt.ylabel('True Label')\n","plt.show()"],"metadata":{"id":"8LSewEgjA6ID","executionInfo":{"status":"ok","timestamp":1708679359584,"user_tz":-330,"elapsed":2214,"user":{"displayName":"Project","userId":"04591569167876890835"}},"outputId":"b07aaa10-bd7b-4b90-f17c-4c7e7c88c542","colab":{"base_uri":"https://localhost:8080/","height":805}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["77/77 [==============================] - 0s 3ms/step - loss: 0.5228 - accuracy: 0.8381\n","Accuracy: 0.8381\n","77/77 [==============================] - 0s 2ms/step\n","Precision: 0.7911, Recall: 0.8381, F-measure: 0.7663\n","77/77 [==============================] - 0s 2ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]}]}