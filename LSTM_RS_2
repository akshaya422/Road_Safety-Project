{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1CqJIfNqsGTK0HQkO9SQMbrRKfnK93xvb","authorship_tag":"ABX9TyNR1iRtL2G8SLTqdonh+hYB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"kIUFtyJ_28wa"},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import numpy as np"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gbcXnaYl3Wxv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1709439396763,"user_tz":-330,"elapsed":20018,"user":{"displayName":"Project","userId":"04591569167876890835"}},"outputId":"2de00214-b751-4a6f-ddee-66047b7cc07a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["df=pd.read_csv(\"/content/drive/MyDrive/Project_II/New dataset_2/Road in India.csv\")\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":565},"id":"5CIbR_nYF3jZ","executionInfo":{"status":"ok","timestamp":1709439400524,"user_tz":-330,"elapsed":466,"user":{"displayName":"Project","userId":"04591569167876890835"}},"outputId":"002b8977-8214-4379-99e8-d88da2fef004"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Time Day_of_week Age_band_of_driver Sex_of_driver  \\\n","0      17:02:00      Monday              18-30          Male   \n","1      17:02:00      Monday              31-50          Male   \n","2      17:02:00      Monday              18-30          Male   \n","3      01:06:00      Sunday              18-30          Male   \n","4      01:06:00      Sunday              18-30          Male   \n","...         ...         ...                ...           ...   \n","12311  16:15:00   Wednesday              31-50          Male   \n","12312  18:00:00      Sunday            Unknown          Male   \n","12313  13:55:00      Sunday            Over 51          Male   \n","12314  13:55:00      Sunday              18-30        Female   \n","12315  13:55:00      Sunday              18-30          Male   \n","\n","        Educational_level Vehicle_driver_relation Driving_experience  \\\n","0       Above high school                Employee              1-2yr   \n","1      Junior high school                Employee         Above 10yr   \n","2      Junior high school                Employee              1-2yr   \n","3      Junior high school                Employee             5-10yr   \n","4      Junior high school                Employee              2-5yr   \n","...                   ...                     ...                ...   \n","12311                 NaN                Employee              2-5yr   \n","12312   Elementary school                Employee             5-10yr   \n","12313  Junior high school                Employee             5-10yr   \n","12314  Junior high school                Employee         Above 10yr   \n","12315  Junior high school                Employee             5-10yr   \n","\n","           Type_of_vehicle Owner_of_vehicle Service_year_of_vehicle  ...  \\\n","0               Automobile            Owner              Above 10yr  ...   \n","1      Public (> 45 seats)            Owner                 5-10yrs  ...   \n","2          Lorry (41?100Q)            Owner                     NaN  ...   \n","3      Public (> 45 seats)     Governmental                     NaN  ...   \n","4                      NaN            Owner                 5-10yrs  ...   \n","...                    ...              ...                     ...  ...   \n","12311       Lorry (11?40Q)            Owner                     NaN  ...   \n","12312           Automobile            Owner                     NaN  ...   \n","12313                Bajaj            Owner                  2-5yrs  ...   \n","12314      Lorry (41?100Q)            Owner                  2-5yrs  ...   \n","12315                Other            Owner                  2-5yrs  ...   \n","\n","      Vehicle_movement   Casualty_class Sex_of_casualty Age_band_of_casualty  \\\n","0       Going straight               na              na                   na   \n","1       Going straight               na              na                   na   \n","2       Going straight  Driver or rider            Male                31-50   \n","3       Going straight       Pedestrian          Female                18-30   \n","4       Going straight               na              na                   na   \n","...                ...              ...             ...                  ...   \n","12311   Going straight               na              na                   na   \n","12312            Other               na              na                   na   \n","12313            Other  Driver or rider            Male                31-50   \n","12314            Other               na              na                   na   \n","12315         Stopping       Pedestrian          Female                    5   \n","\n","      Casualty_severity Work_of_casuality Fitness_of_casuality  \\\n","0                    na               NaN                  NaN   \n","1                    na               NaN                  NaN   \n","2                     3            Driver                  NaN   \n","3                     3            Driver               Normal   \n","4                    na               NaN                  NaN   \n","...                 ...               ...                  ...   \n","12311                na            Driver               Normal   \n","12312                na            Driver               Normal   \n","12313                 3            Driver               Normal   \n","12314                na            Driver               Normal   \n","12315                 3            Driver               Normal   \n","\n","                                     Pedestrian_movement  \\\n","0                                       Not a Pedestrian   \n","1                                       Not a Pedestrian   \n","2                                       Not a Pedestrian   \n","3                                       Not a Pedestrian   \n","4                                       Not a Pedestrian   \n","...                                                  ...   \n","12311                                   Not a Pedestrian   \n","12312                                   Not a Pedestrian   \n","12313                                   Not a Pedestrian   \n","12314                                   Not a Pedestrian   \n","12315  Crossing from nearside - masked by parked or s...   \n","\n","                          Cause_of_accident Accident_severity  \n","0                           Moving Backward     Slight Injury  \n","1                                Overtaking     Slight Injury  \n","2                 Changing lane to the left    Serious Injury  \n","3                Changing lane to the right     Slight Injury  \n","4                                Overtaking     Slight Injury  \n","...                                     ...               ...  \n","12311                         No distancing     Slight Injury  \n","12312                         No distancing     Slight Injury  \n","12313            Changing lane to the right    Serious Injury  \n","12314  Driving under the influence of drugs     Slight Injury  \n","12315            Changing lane to the right     Slight Injury  \n","\n","[12316 rows x 32 columns]"],"text/html":["\n","  <div id=\"df-0be2dbcf-efef-4bd4-9c6b-56dd44590b6f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>Day_of_week</th>\n","      <th>Age_band_of_driver</th>\n","      <th>Sex_of_driver</th>\n","      <th>Educational_level</th>\n","      <th>Vehicle_driver_relation</th>\n","      <th>Driving_experience</th>\n","      <th>Type_of_vehicle</th>\n","      <th>Owner_of_vehicle</th>\n","      <th>Service_year_of_vehicle</th>\n","      <th>...</th>\n","      <th>Vehicle_movement</th>\n","      <th>Casualty_class</th>\n","      <th>Sex_of_casualty</th>\n","      <th>Age_band_of_casualty</th>\n","      <th>Casualty_severity</th>\n","      <th>Work_of_casuality</th>\n","      <th>Fitness_of_casuality</th>\n","      <th>Pedestrian_movement</th>\n","      <th>Cause_of_accident</th>\n","      <th>Accident_severity</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17:02:00</td>\n","      <td>Monday</td>\n","      <td>18-30</td>\n","      <td>Male</td>\n","      <td>Above high school</td>\n","      <td>Employee</td>\n","      <td>1-2yr</td>\n","      <td>Automobile</td>\n","      <td>Owner</td>\n","      <td>Above 10yr</td>\n","      <td>...</td>\n","      <td>Going straight</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Moving Backward</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>17:02:00</td>\n","      <td>Monday</td>\n","      <td>31-50</td>\n","      <td>Male</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>Above 10yr</td>\n","      <td>Public (&gt; 45 seats)</td>\n","      <td>Owner</td>\n","      <td>5-10yrs</td>\n","      <td>...</td>\n","      <td>Going straight</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Overtaking</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>17:02:00</td>\n","      <td>Monday</td>\n","      <td>18-30</td>\n","      <td>Male</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>1-2yr</td>\n","      <td>Lorry (41?100Q)</td>\n","      <td>Owner</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>Going straight</td>\n","      <td>Driver or rider</td>\n","      <td>Male</td>\n","      <td>31-50</td>\n","      <td>3</td>\n","      <td>Driver</td>\n","      <td>NaN</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Changing lane to the left</td>\n","      <td>Serious Injury</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01:06:00</td>\n","      <td>Sunday</td>\n","      <td>18-30</td>\n","      <td>Male</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>5-10yr</td>\n","      <td>Public (&gt; 45 seats)</td>\n","      <td>Governmental</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>Going straight</td>\n","      <td>Pedestrian</td>\n","      <td>Female</td>\n","      <td>18-30</td>\n","      <td>3</td>\n","      <td>Driver</td>\n","      <td>Normal</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Changing lane to the right</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01:06:00</td>\n","      <td>Sunday</td>\n","      <td>18-30</td>\n","      <td>Male</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>2-5yr</td>\n","      <td>NaN</td>\n","      <td>Owner</td>\n","      <td>5-10yrs</td>\n","      <td>...</td>\n","      <td>Going straight</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Overtaking</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>12311</th>\n","      <td>16:15:00</td>\n","      <td>Wednesday</td>\n","      <td>31-50</td>\n","      <td>Male</td>\n","      <td>NaN</td>\n","      <td>Employee</td>\n","      <td>2-5yr</td>\n","      <td>Lorry (11?40Q)</td>\n","      <td>Owner</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>Going straight</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>Driver</td>\n","      <td>Normal</td>\n","      <td>Not a Pedestrian</td>\n","      <td>No distancing</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>12312</th>\n","      <td>18:00:00</td>\n","      <td>Sunday</td>\n","      <td>Unknown</td>\n","      <td>Male</td>\n","      <td>Elementary school</td>\n","      <td>Employee</td>\n","      <td>5-10yr</td>\n","      <td>Automobile</td>\n","      <td>Owner</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>Other</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>Driver</td>\n","      <td>Normal</td>\n","      <td>Not a Pedestrian</td>\n","      <td>No distancing</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>12313</th>\n","      <td>13:55:00</td>\n","      <td>Sunday</td>\n","      <td>Over 51</td>\n","      <td>Male</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>5-10yr</td>\n","      <td>Bajaj</td>\n","      <td>Owner</td>\n","      <td>2-5yrs</td>\n","      <td>...</td>\n","      <td>Other</td>\n","      <td>Driver or rider</td>\n","      <td>Male</td>\n","      <td>31-50</td>\n","      <td>3</td>\n","      <td>Driver</td>\n","      <td>Normal</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Changing lane to the right</td>\n","      <td>Serious Injury</td>\n","    </tr>\n","    <tr>\n","      <th>12314</th>\n","      <td>13:55:00</td>\n","      <td>Sunday</td>\n","      <td>18-30</td>\n","      <td>Female</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>Above 10yr</td>\n","      <td>Lorry (41?100Q)</td>\n","      <td>Owner</td>\n","      <td>2-5yrs</td>\n","      <td>...</td>\n","      <td>Other</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>na</td>\n","      <td>Driver</td>\n","      <td>Normal</td>\n","      <td>Not a Pedestrian</td>\n","      <td>Driving under the influence of drugs</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","    <tr>\n","      <th>12315</th>\n","      <td>13:55:00</td>\n","      <td>Sunday</td>\n","      <td>18-30</td>\n","      <td>Male</td>\n","      <td>Junior high school</td>\n","      <td>Employee</td>\n","      <td>5-10yr</td>\n","      <td>Other</td>\n","      <td>Owner</td>\n","      <td>2-5yrs</td>\n","      <td>...</td>\n","      <td>Stopping</td>\n","      <td>Pedestrian</td>\n","      <td>Female</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>Driver</td>\n","      <td>Normal</td>\n","      <td>Crossing from nearside - masked by parked or s...</td>\n","      <td>Changing lane to the right</td>\n","      <td>Slight Injury</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>12316 rows × 32 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0be2dbcf-efef-4bd4-9c6b-56dd44590b6f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0be2dbcf-efef-4bd4-9c6b-56dd44590b6f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0be2dbcf-efef-4bd4-9c6b-56dd44590b6f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-46675437-2e60-430d-8511-4602ec34187d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-46675437-2e60-430d-8511-4602ec34187d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-46675437-2e60-430d-8511-4602ec34187d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_850e7328-cd87-47ea-b032-e75f9743ac4d\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_850e7328-cd87-47ea-b032-e75f9743ac4d button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DQKawFWnGLVL","executionInfo":{"status":"ok","timestamp":1709439403041,"user_tz":-330,"elapsed":7,"user":{"displayName":"Project","userId":"04591569167876890835"}},"outputId":"30aa65d7-96bc-4f33-fc46-9ee321df72eb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Time', 'Day_of_week', 'Age_band_of_driver', 'Sex_of_driver',\n","       'Educational_level', 'Vehicle_driver_relation', 'Driving_experience',\n","       'Type_of_vehicle', 'Owner_of_vehicle', 'Service_year_of_vehicle',\n","       'Defect_of_vehicle', 'Area_accident_occured', 'Lanes_or_Medians',\n","       'Road_allignment', 'Types_of_Junction', 'Road_surface_type',\n","       'Road_surface_conditions', 'Light_conditions', 'Weather_conditions',\n","       'Type_of_collision', 'Number_of_vehicles_involved',\n","       'Number_of_casualties', 'Vehicle_movement', 'Casualty_class',\n","       'Sex_of_casualty', 'Age_band_of_casualty', 'Casualty_severity',\n","       'Work_of_casuality', 'Fitness_of_casuality', 'Pedestrian_movement',\n","       'Cause_of_accident', 'Accident_severity'],\n","      dtype='object')"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["from sklearn import preprocessing\n","le = preprocessing.LabelEncoder()\n","df[ 'Time' ]= le.fit_transform(df[ 'Time' ])\n","df[ 'Day_of_week' ]= le.fit_transform(df[ 'Day_of_week' ])\n","df[ 'Age_band_of_driver' ]= le.fit_transform(df[ 'Age_band_of_driver' ])\n","df[ 'Sex_of_driver' ]= le.fit_transform(df[ 'Sex_of_driver' ])\n","df[ 'Educational_level' ]= le.fit_transform(df[ 'Educational_level' ])\n","df[ 'Vehicle_driver_relation' ]= le.fit_transform(df[ 'Vehicle_driver_relation' ])\n","df[ 'Driving_experience' ]= le.fit_transform(df[ 'Driving_experience' ])\n","df[ 'Type_of_vehicle' ]= le.fit_transform(df[ 'Type_of_vehicle' ])\n","df[ 'Owner_of_vehicle' ]= le.fit_transform(df[ 'Owner_of_vehicle' ])\n","df[ 'Service_year_of_vehicle' ]= le.fit_transform(df[ 'Service_year_of_vehicle' ])\n","df[ 'Defect_of_vehicle' ]= le.fit_transform(df[ 'Defect_of_vehicle' ])\n","df[ 'Area_accident_occured' ]= le.fit_transform(df[ 'Area_accident_occured' ])\n","df[ 'Lanes_or_Medians' ]= le.fit_transform(df[ 'Lanes_or_Medians' ])\n","df[ 'Road_allignment' ]= le.fit_transform(df[ 'Road_allignment' ])\n","df[ 'Types_of_Junction' ]= le.fit_transform(df[ 'Types_of_Junction' ])\n","df[ 'Road_surface_type' ]= le.fit_transform(df[ 'Road_surface_type' ])\n","df[ 'Road_surface_conditions' ]= le.fit_transform(df[ 'Road_surface_conditions' ])\n","df[ 'Light_conditions' ]= le.fit_transform(df[ 'Light_conditions' ])\n","df[ 'Weather_conditions' ]= le.fit_transform(df[ 'Weather_conditions' ])\n","df[ 'Type_of_collision' ]= le.fit_transform(df[ 'Type_of_collision' ])\n","df[ 'Number_of_vehicles_involved' ]= le.fit_transform(df[ 'Number_of_vehicles_involved' ])\n","df[ 'Number_of_casualties' ]= le.fit_transform(df[ 'Number_of_casualties' ])\n","df[ 'Vehicle_movement' ]= le.fit_transform(df[ 'Vehicle_movement' ])\n","df[ 'Casualty_class' ]= le.fit_transform(df[ 'Casualty_class' ])\n","df[ 'Sex_of_casualty' ]= le.fit_transform(df[ 'Sex_of_casualty' ])\n","df[ 'Age_band_of_casualty' ]= le.fit_transform(df[ 'Age_band_of_casualty' ])\n","df[ 'Casualty_severity' ]= le.fit_transform(df[ 'Casualty_severity' ])\n","df[ 'Work_of_casuality' ]= le.fit_transform(df[ 'Work_of_casuality' ])\n","df[ 'Fitness_of_casuality' ]= le.fit_transform(df[ 'Fitness_of_casuality' ])\n","df[ 'Pedestrian_movement' ]= le.fit_transform(df[ 'Pedestrian_movement' ])\n","df[ 'Cause_of_accident' ]= le.fit_transform(df[ 'Cause_of_accident' ])\n","df[ 'Accident_severity' ]= le.fit_transform(df[ 'Accident_severity' ])\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":444},"id":"Tu5T4GzjGMo_","executionInfo":{"status":"ok","timestamp":1709439404842,"user_tz":-330,"elapsed":8,"user":{"displayName":"Project","userId":"04591569167876890835"}},"outputId":"5a7a6ef2-eefd-416a-b652-5747d163cbbe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Time  Day_of_week  Age_band_of_driver  Sex_of_driver  \\\n","0       735            1                   0              1   \n","1       735            1                   1              1   \n","2       735            1                   0              1   \n","3        42            3                   0              1   \n","4        42            3                   0              1   \n","...     ...          ...                 ...            ...   \n","12311   689            6                   1              1   \n","12312   791            3                   4              1   \n","12313   561            3                   2              1   \n","12314   561            3                   0              0   \n","12315   561            3                   0              1   \n","\n","       Educational_level  Vehicle_driver_relation  Driving_experience  \\\n","0                      0                        0                   0   \n","1                      4                        0                   3   \n","2                      4                        0                   0   \n","3                      4                        0                   2   \n","4                      4                        0                   1   \n","...                  ...                      ...                 ...   \n","12311                  7                        0                   1   \n","12312                  1                        0                   2   \n","12313                  4                        0                   2   \n","12314                  4                        0                   3   \n","12315                  4                        0                   2   \n","\n","       Type_of_vehicle  Owner_of_vehicle  Service_year_of_vehicle  ...  \\\n","0                    0                 3                        3  ...   \n","1                   11                 3                        2  ...   \n","2                    5                 3                        6  ...   \n","3                   11                 0                        6  ...   \n","4                   17                 3                        2  ...   \n","...                ...               ...                      ...  ...   \n","12311                4                 3                        6  ...   \n","12312                0                 3                        6  ...   \n","12313                1                 3                        1  ...   \n","12314                5                 3                        1  ...   \n","12315                7                 3                        1  ...   \n","\n","       Vehicle_movement  Casualty_class  Sex_of_casualty  \\\n","0                     2               3                2   \n","1                     2               3                2   \n","2                     2               0                1   \n","3                     2               2                0   \n","4                     2               3                2   \n","...                 ...             ...              ...   \n","12311                 2               3                2   \n","12312                 4               3                2   \n","12313                 4               0                1   \n","12314                 4               3                2   \n","12315                 8               2                0   \n","\n","       Age_band_of_casualty  Casualty_severity  Work_of_casuality  \\\n","0                         5                  3                  7   \n","1                         5                  3                  7   \n","2                         1                  2                  0   \n","3                         0                  2                  0   \n","4                         5                  3                  7   \n","...                     ...                ...                ...   \n","12311                     5                  3                  0   \n","12312                     5                  3                  0   \n","12313                     1                  2                  0   \n","12314                     5                  3                  0   \n","12315                     2                  2                  0   \n","\n","       Fitness_of_casuality  Pedestrian_movement  Cause_of_accident  \\\n","0                         5                    5                  9   \n","1                         5                    5                 16   \n","2                         5                    5                  0   \n","3                         2                    5                  1   \n","4                         5                    5                 16   \n","...                     ...                  ...                ...   \n","12311                     2                    5                 10   \n","12312                     2                    5                 10   \n","12313                     2                    5                  1   \n","12314                     2                    5                  5   \n","12315                     2                    1                  1   \n","\n","       Accident_severity  \n","0                      2  \n","1                      2  \n","2                      1  \n","3                      2  \n","4                      2  \n","...                  ...  \n","12311                  2  \n","12312                  2  \n","12313                  1  \n","12314                  2  \n","12315                  2  \n","\n","[12316 rows x 32 columns]"],"text/html":["\n","  <div id=\"df-08e46117-1ad1-4252-ad1a-520daaf11fee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>Day_of_week</th>\n","      <th>Age_band_of_driver</th>\n","      <th>Sex_of_driver</th>\n","      <th>Educational_level</th>\n","      <th>Vehicle_driver_relation</th>\n","      <th>Driving_experience</th>\n","      <th>Type_of_vehicle</th>\n","      <th>Owner_of_vehicle</th>\n","      <th>Service_year_of_vehicle</th>\n","      <th>...</th>\n","      <th>Vehicle_movement</th>\n","      <th>Casualty_class</th>\n","      <th>Sex_of_casualty</th>\n","      <th>Age_band_of_casualty</th>\n","      <th>Casualty_severity</th>\n","      <th>Work_of_casuality</th>\n","      <th>Fitness_of_casuality</th>\n","      <th>Pedestrian_movement</th>\n","      <th>Cause_of_accident</th>\n","      <th>Accident_severity</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>735</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>735</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>16</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>735</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>42</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>42</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>16</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>12311</th>\n","      <td>689</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>12312</th>\n","      <td>791</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>10</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>12313</th>\n","      <td>561</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>12314</th>\n","      <td>561</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>12315</th>\n","      <td>561</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>12316 rows × 32 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-08e46117-1ad1-4252-ad1a-520daaf11fee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-08e46117-1ad1-4252-ad1a-520daaf11fee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-08e46117-1ad1-4252-ad1a-520daaf11fee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-75ea9f15-b38a-4c8d-b2cd-65affbd5abc2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-75ea9f15-b38a-4c8d-b2cd-65affbd5abc2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-75ea9f15-b38a-4c8d-b2cd-65affbd5abc2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_cc8ea022-cbfd-44c9-b046-ec4392131264\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_cc8ea022-cbfd-44c9-b046-ec4392131264 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["import numpy as np\n","from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import LSTM, Dense\n","num_samples = 1000\n","time_steps = 10\n","num_features = 1\n","data = np.random.rand(num_samples, time_steps, num_features)#contains random sequences of shape\n","labels = np.random.randint(0, 2, size=(num_samples,))#contain random binary labels\n","\n","# Split the data into training and testing sets\n","train_size = int(0.5 * num_samples)\n","x_train, x_test = data[:train_size], data[train_size:]\n","y_train, y_test = labels[:train_size], labels[train_size:]\n","\n","# Define the LSTM model\n","model = Sequential()\n","model.add(LSTM(units=64, return_sequences=True, input_shape=(time_steps, num_features)))\n","model.add(LSTM(units=128))\n","model.add(Dense(units=1, activation='softmax'))\n","# Compile the model\n","model.compile(optimizer='adagrad', loss='binary_crossentropy', metrics=['accuracy'])\n","# Train the model\n","model.fit(x_train, y_train, epochs=50, batch_size=128, validation_data=(x_test, y_test))\n","# Evaluate the model\n","predictions = model.predict(x_test)\n","predictions_classes = (predictions > 0.5).astype(int)  # Thresholding probabilities to get classes\n","# Calculate evaluation metrics\n","accuracy = accuracy_score(y_test, predictions_classes)\n","precision = precision_score(y_test, predictions_classes)\n","recall = recall_score(y_test, predictions_classes)\n","f1 = f1_score(y_test, predictions_classes)\n","# Print evaluation metrics\n","print(f'Accuracy: {accuracy}')\n","print(f'Precision: {precision}')\n","print(f'Recall: {recall}')\n","print(f'F1-score: {f1}')"],"metadata":{"id":"u_lH2VqtswhQ","colab":{"base_uri":"https://localhost:8080/"},"outputId":"b6fc605c-d482-49ac-fe6d-a5af4371cc25","executionInfo":{"status":"ok","timestamp":1709439441741,"user_tz":-330,"elapsed":31661,"user":{"displayName":"Project","userId":"04591569167876890835"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","4/4 [==============================] - 5s 588ms/step - loss: 0.6932 - accuracy: 0.5200 - val_loss: 0.6931 - val_accuracy: 0.4880\n","Epoch 2/50\n","4/4 [==============================] - 1s 265ms/step - loss: 0.6932 - accuracy: 0.5200 - val_loss: 0.6931 - val_accuracy: 0.4880\n","Epoch 3/50\n","4/4 [==============================] - 1s 213ms/step - loss: 0.6932 - accuracy: 0.5200 - val_loss: 0.6931 - val_accuracy: 0.4880\n","Epoch 4/50\n","4/4 [==============================] - 1s 236ms/step - loss: 0.6931 - accuracy: 0.5200 - val_loss: 0.6931 - val_accuracy: 0.4880\n","Epoch 5/50\n","4/4 [==============================] - 1s 172ms/step - loss: 0.6931 - accuracy: 0.5200 - val_loss: 0.6931 - val_accuracy: 0.4880\n","Epoch 6/50\n","4/4 [==============================] - 1s 237ms/step - loss: 0.6931 - accuracy: 0.5200 - val_loss: 0.6932 - val_accuracy: 0.4880\n","Epoch 7/50\n","4/4 [==============================] - 1s 206ms/step - loss: 0.6931 - accuracy: 0.5200 - val_loss: 0.6932 - val_accuracy: 0.4880\n","Epoch 8/50\n","4/4 [==============================] - 1s 144ms/step - loss: 0.6931 - accuracy: 0.5200 - val_loss: 0.6932 - val_accuracy: 0.4880\n","Epoch 9/50\n","4/4 [==============================] - 1s 200ms/step - loss: 0.6931 - accuracy: 0.5200 - val_loss: 0.6932 - val_accuracy: 0.4880\n","Epoch 10/50\n","4/4 [==============================] - 0s 139ms/step - loss: 0.6930 - accuracy: 0.5200 - val_loss: 0.6932 - val_accuracy: 0.4880\n","Epoch 11/50\n","4/4 [==============================] - 1s 162ms/step - loss: 0.6930 - accuracy: 0.5200 - val_loss: 0.6932 - val_accuracy: 0.4880\n","Epoch 12/50\n","4/4 [==============================] - 1s 203ms/step - loss: 0.6930 - accuracy: 0.5200 - val_loss: 0.6932 - val_accuracy: 0.4880\n","Epoch 13/50\n","4/4 [==============================] - 1s 214ms/step - loss: 0.6930 - accuracy: 0.5200 - val_loss: 0.6932 - val_accuracy: 0.4880\n","Epoch 14/50\n","4/4 [==============================] - 1s 222ms/step - loss: 0.6930 - accuracy: 0.5200 - val_loss: 0.6932 - val_accuracy: 0.4880\n","Epoch 15/50\n","4/4 [==============================] - 1s 233ms/step - loss: 0.6930 - accuracy: 0.5200 - val_loss: 0.6932 - val_accuracy: 0.4880\n","Epoch 16/50\n","4/4 [==============================] - 0s 137ms/step - loss: 0.6930 - accuracy: 0.5200 - val_loss: 0.6932 - val_accuracy: 0.4880\n","Epoch 17/50\n","4/4 [==============================] - 1s 159ms/step - loss: 0.6930 - accuracy: 0.5200 - val_loss: 0.6933 - val_accuracy: 0.4880\n","Epoch 18/50\n","4/4 [==============================] - 1s 144ms/step - loss: 0.6929 - accuracy: 0.5200 - val_loss: 0.6933 - val_accuracy: 0.4880\n","Epoch 19/50\n","4/4 [==============================] - 0s 130ms/step - loss: 0.6929 - accuracy: 0.5200 - val_loss: 0.6933 - val_accuracy: 0.4880\n","Epoch 20/50\n","4/4 [==============================] - 1s 144ms/step - loss: 0.6929 - accuracy: 0.5200 - val_loss: 0.6933 - val_accuracy: 0.4880\n","Epoch 21/50\n","4/4 [==============================] - 1s 171ms/step - loss: 0.6929 - accuracy: 0.5200 - val_loss: 0.6933 - val_accuracy: 0.4880\n","Epoch 22/50\n","4/4 [==============================] - 1s 176ms/step - loss: 0.6929 - accuracy: 0.5200 - val_loss: 0.6933 - val_accuracy: 0.4880\n","Epoch 23/50\n","4/4 [==============================] - 1s 234ms/step - loss: 0.6929 - accuracy: 0.5200 - val_loss: 0.6933 - val_accuracy: 0.4880\n","Epoch 24/50\n","4/4 [==============================] - 1s 223ms/step - loss: 0.6929 - accuracy: 0.5200 - val_loss: 0.6933 - val_accuracy: 0.4880\n","Epoch 25/50\n","4/4 [==============================] - 1s 244ms/step - loss: 0.6929 - accuracy: 0.5200 - val_loss: 0.6933 - val_accuracy: 0.4880\n","Epoch 26/50\n","4/4 [==============================] - 1s 209ms/step - loss: 0.6929 - accuracy: 0.5200 - val_loss: 0.6933 - val_accuracy: 0.4880\n","Epoch 27/50\n","4/4 [==============================] - 1s 146ms/step - loss: 0.6929 - accuracy: 0.5200 - val_loss: 0.6933 - val_accuracy: 0.4880\n","Epoch 28/50\n","4/4 [==============================] - 1s 145ms/step - loss: 0.6928 - accuracy: 0.5200 - val_loss: 0.6934 - val_accuracy: 0.4880\n","Epoch 29/50\n","4/4 [==============================] - 0s 134ms/step - loss: 0.6928 - accuracy: 0.5200 - val_loss: 0.6934 - val_accuracy: 0.4880\n","Epoch 30/50\n","4/4 [==============================] - 0s 101ms/step - loss: 0.6928 - accuracy: 0.5200 - val_loss: 0.6934 - val_accuracy: 0.4880\n","Epoch 31/50\n","4/4 [==============================] - 0s 74ms/step - loss: 0.6928 - accuracy: 0.5200 - val_loss: 0.6934 - val_accuracy: 0.4880\n","Epoch 32/50\n","4/4 [==============================] - 0s 94ms/step - loss: 0.6928 - accuracy: 0.5200 - val_loss: 0.6934 - val_accuracy: 0.4880\n","Epoch 33/50\n","4/4 [==============================] - 0s 68ms/step - loss: 0.6928 - accuracy: 0.5200 - val_loss: 0.6934 - val_accuracy: 0.4880\n","Epoch 34/50\n","4/4 [==============================] - 0s 93ms/step - loss: 0.6928 - accuracy: 0.5200 - val_loss: 0.6934 - val_accuracy: 0.4880\n","Epoch 35/50\n","4/4 [==============================] - 0s 69ms/step - loss: 0.6928 - accuracy: 0.5200 - val_loss: 0.6934 - val_accuracy: 0.4880\n","Epoch 36/50\n","4/4 [==============================] - 0s 94ms/step - loss: 0.6928 - accuracy: 0.5200 - val_loss: 0.6934 - val_accuracy: 0.4880\n","Epoch 37/50\n","4/4 [==============================] - 0s 68ms/step - loss: 0.6928 - accuracy: 0.5200 - val_loss: 0.6934 - val_accuracy: 0.4880\n","Epoch 38/50\n","4/4 [==============================] - 0s 71ms/step - loss: 0.6928 - accuracy: 0.5200 - val_loss: 0.6934 - val_accuracy: 0.4880\n","Epoch 39/50\n","4/4 [==============================] - 0s 67ms/step - loss: 0.6928 - accuracy: 0.5200 - val_loss: 0.6935 - val_accuracy: 0.4880\n","Epoch 40/50\n","4/4 [==============================] - 0s 71ms/step - loss: 0.6927 - accuracy: 0.5200 - val_loss: 0.6935 - val_accuracy: 0.4880\n","Epoch 41/50\n","4/4 [==============================] - 0s 68ms/step - loss: 0.6927 - accuracy: 0.5200 - val_loss: 0.6935 - val_accuracy: 0.4880\n","Epoch 42/50\n","4/4 [==============================] - 0s 73ms/step - loss: 0.6927 - accuracy: 0.5200 - val_loss: 0.6935 - val_accuracy: 0.4880\n","Epoch 43/50\n","4/4 [==============================] - 0s 69ms/step - loss: 0.6927 - accuracy: 0.5200 - val_loss: 0.6935 - val_accuracy: 0.4880\n","Epoch 44/50\n","4/4 [==============================] - 0s 68ms/step - loss: 0.6927 - accuracy: 0.5200 - val_loss: 0.6935 - val_accuracy: 0.4880\n","Epoch 45/50\n","4/4 [==============================] - 0s 69ms/step - loss: 0.6927 - accuracy: 0.5200 - val_loss: 0.6935 - val_accuracy: 0.4880\n","Epoch 46/50\n","4/4 [==============================] - 0s 98ms/step - loss: 0.6927 - accuracy: 0.5200 - val_loss: 0.6935 - val_accuracy: 0.4880\n","Epoch 47/50\n","4/4 [==============================] - 0s 69ms/step - loss: 0.6927 - accuracy: 0.5200 - val_loss: 0.6935 - val_accuracy: 0.4880\n","Epoch 48/50\n","4/4 [==============================] - 0s 67ms/step - loss: 0.6927 - accuracy: 0.5200 - val_loss: 0.6935 - val_accuracy: 0.4880\n","Epoch 49/50\n","4/4 [==============================] - 0s 70ms/step - loss: 0.6927 - accuracy: 0.5200 - val_loss: 0.6935 - val_accuracy: 0.4880\n","Epoch 50/50\n","4/4 [==============================] - 0s 75ms/step - loss: 0.6927 - accuracy: 0.5200 - val_loss: 0.6935 - val_accuracy: 0.4880\n","16/16 [==============================] - 1s 7ms/step\n","Accuracy: 0.488\n","Precision: 0.488\n","Recall: 1.0\n","F1-score: 0.6559139784946236\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","# Confusion Matrix\n","conf_matrix = confusion_matrix(y_test, predictions_classes)\n","# Print the confusion matrix using Matplotlib\n","fig, ax = plt.subplots(figsize=(3.5, 3.5))\n","ax.matshow(conf_matrix, cmap=plt.cm.Blues, alpha=0.3)\n","for i in range(conf_matrix.shape[0]):\n","    for j in range(conf_matrix.shape[1]):\n","        ax.text(x=j, y=i,s=conf_matrix[i, j], va='center', ha='center', size='xx-large')\n","plt.xlabel('Predictions', fontsize=18)\n","plt.ylabel('Actuals', fontsize=18)\n","plt.title('Confusion Matrix', fontsize=18)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":391},"id":"ZGHIuKOMJTyF","executionInfo":{"status":"ok","timestamp":1709439442677,"user_tz":-330,"elapsed":952,"user":{"displayName":"Project","userId":"04591569167876890835"}},"outputId":"d89a75d6-7223-4cb9-b037-414fc863d6d5"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 350x350 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}